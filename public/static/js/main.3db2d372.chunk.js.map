{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","Button","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","select","model","text","validators","minLength","show","messages","textarea","rows","type","value","color","React","Component","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","outline","md","Col","placeholder","size","offset","check","checkbox","RenderLeader","leader","Media","tag","left","middle","object","style","maxHeight","maxWidth","body","heading","designation","About","leaders","CardHeader","title","list","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","RenderCard","item","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leadersLoading","leadersErrMess","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","leaderErrMess","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3db2d372.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/'","import React from 'react'\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem,  } from 'reactstrap'\r\nimport {Link } from 'react-router-dom'\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n  const Menu = (props)=>{\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n      return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n          <RenderMenuItem dish={dish} />\r\n        </div>\r\n      )\r\n    })\r\n\r\n    if (props.dishes.isLoading) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Menu</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n              {menu}\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default Menu;","import React  from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem,Breadcrumb, Button,Modal,ModalBody,ModalHeader,Label,Row } from 'reactstrap'\r\nimport {Link} from 'react-router-dom' \r\nimport {Control, LocalForm, Errors} from 'react-redux-form'\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\r\n\r\n  const required=(val)=> val && val.length;\r\n  const maxLength=(len)=>(val)=> !(val) || (val.length<=len);\r\n  const minLength=(len)=>(val)=> (val) && (val.length>=len);\r\n\r\n  class CommentForm extends React.Component{\r\n        constructor(props)\r\n        {\r\n            super(props);\r\n            this.state={\r\n                isModalOpen:false\r\n            };\r\n            this.toggleModal=this.toggleModal.bind(this)\r\n            this.handleSubmit= this.handleSubmit.bind(this)\r\n        }\r\n        toggleModal(){\r\n            this.setState({isModalOpen:!this.state.isModalOpen});\r\n        }\r\n        handleSubmit(values)\r\n        {\r\n          this.toggleModal()\r\n          this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                <Button onClick={this.toggleModal}><i className=\"fa fa-pencil fa-lg\"></i> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\"> Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"name\">Your Name</Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\" className=\"form-control\"\r\n                                    validators={{required,minLength:minLength(3),maxLength:maxLength(15)}} \r\n                                    />\r\n                                    <Errors \r\n                                    className=\"text-danger\" \r\n                                    model=\".name\" \r\n                                    show=\"touched\" \r\n                                    messages={{\r\n                                        required:'Required',\r\n                                        minLength:\"must be greater than 2 charactor\",\r\n                                        maxLength:\"must be 15 charactor or less\"\r\n                                    }}\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"feedback\">Comment</Label>\r\n                                    <Control.textarea model=\".message\" id=\"feedback\" name=\"massage\" rows=\"6\" className=\"form-control\"/>\r\n                                </Row>\r\n\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit </Button>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                </Modal>\r\n                </div>\r\n            );\r\n        }\r\n  }\r\n\r\n  function RenderDish({dish}) {\r\n    return (\r\n      <div>\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  function RenderComments({comments, postComment, dishId }) {\r\n    if (comments != null) {\r\n      return(\r\n        <div>\r\n          <h4>Comments</h4>\r\n          <ul className=\"list-unstyled\">\r\n            <Stagger in>\r\n                {comments.map((comment) => {\r\n                  return (\r\n                      <Fade in>\r\n                          <li key={comment.id}>\r\n                          <p>{comment.comment}</p>\r\n                          <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                          </li>\r\n                     </Fade>\r\n                );\r\n              })}\r\n           </Stagger>\r\n          </ul>\r\n          <CommentForm dishId={dishId} postComment={postComment}/>\r\n        </div>\r\n      )\r\n   \r\n    }\r\n    else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const DishDetail = (props)=> {\r\n    if (props.isLoading) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n      \r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>{props.dish.name}</h3>\r\n              <hr/>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n              <RenderDish dish={props.dish}/>  \r\n            </div>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n              <RenderComments comments={props.comments}\r\n                postComment={props.postComment}\r\n                dishId={props.dish.id}\r\n              />              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n            Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n  constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    \r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <Button outline color=\"success\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</Button>\r\n                            <Button outline color =\"primary\" ><i className=\"fa fa-skype\"></i> Skype</Button>\r\n                            <Button outline color=\"secondary\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}> \r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nfunction RenderLeader({leader}) {\r\n    const imgStyle = {\r\n        maxHeight: 115,\r\n        maxWidth: 115\r\n    }\r\n    return (\r\n                <Media tag=\"li\" className=\"mt-4 \">\r\n                  <Media left middle>\r\n                      <Media object src={baseUrl + leader.image} alt={leader.name} style={imgStyle} />\r\n                  </Media>\r\n                  <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                  </Media>\r\n                </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders.leaders != null) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <div>\r\n                <Fade in>\r\n                    <RenderLeader leader={leader} />\r\n                </Fade>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                    <Stagger in>\r\n                        {leaders}\r\n                    </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default About;    ","import React, {Component} from 'react'\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse,NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label} from 'reactstrap'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isNavOpen : false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen,\r\n        })\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav}/>\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                            alt=\"Kbn Restorant\"/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span>Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span>About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span>Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/Contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span>Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                </Button>\r\n                                \r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Enjoy Taste Of Tasty Cafe</h1>\r\n                                <p>We take inspiration from the worlds best cuision , and create a unique fusion experiance , our lipsmacking creation will tickle your</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {Link } from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/Mene\">Menu</Link></li>\r\n                        <li><Link to=\"/Contact Us\">Contact US</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Madivala<br />\r\n\t\t              St.Johns road, Bangalore<br />\r\n\t\t              KARNATAKA<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +91 9809876554<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +91 879876998<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:Kbn@food.net\">\r\n                         TastyCafe@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Kbn Developers</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => alert('Thank you for your feedback!' + JSON.stringify(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING ='LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport{ Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos , fetchLeaders} from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),  \r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n  \tconst HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n      \t<Header />\r\n      \t<TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENT:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENTS:\r\n        var comment = action.payload;\r\n        \r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react'\r\nimport Main from './components/MainComponent'\r\nimport './App.css'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ConfigureStore } from './redux/configureStore'\r\n\r\nconst store = ConfigureStore();\r\nclass App extends Component{\r\n  \r\n  render(){\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'bootstrap-social/bootstrap-social.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}